{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qFAAqF;AACrF,qFAAqF;AACrF,MAAM,+EAA+E;AACrF,qFAAqF;AACrF,qFAAqF;AACrF;AACA;AACA,qFAAqF;AACrF,qFAAqF;AACrF,MAAM,+EAA+E;AACrF,qFAAqF;AACrF,qFAAqF;AACrF;AACA;AACA,qFAAqF;AACrF;AACA;AACA,qFAAqF;AACrF,qFAAqF;AACrF,qFAAqF;AACrF,qFAAqF;AACrF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF,qFAAqF;AACrF,qFAAqF;AACrF,qFAAqF;AACrF;AACA;AACA,qFAAqF;AACrF;AACA,UAAU,2EAA2E;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF,sFAAsF;AACtF;AACA;AACA;AACA,sFAAsF;AACtF,sFAAsF;AACtF;AACA,kBAAkB;AAClB,sFAAsF;AACtF,sFAAsF;AACtF;AACA;AACA,sFAAsF;AACtF;AACA,iBAAiB;AACjB;AACA;AACA,sFAAsF;AACtF;AACA,sFAAsF;AACtF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA,sFAAsF;AACtF,sFAAsF;AACtF,cAAc;AACd;AACA;AACA;AACA,sFAAsF;AACtF;AACA,sFAAsF;AACtF,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnHA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,qEAAqE;AACrE,qEAAqE;AACrE;AACA;AACA,qEAAqE;AACrE;AACA;AACA,qEAAqE;AACrE;AACA,qEAAqE;AACrE;AACA;AACA,cAAc;AACd,qFAAqF;AACrF;AACA;AACA;AACA,4BAA4B,UAAU,MAAM,SAAS;AACrD,kDAAkD,WAAW;AAC7D,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,6EAA6E;AAC7E,8CAA8C,IAAI,YAAY,WAAW,IAAI;AAC7E;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA,aAAa;AACb,SAAS,GAAG;AACZ;AACA;AACA;AACA,uEAAuE;AACvE,4BAA4B,iCAAiC,UAAU;AACvE,+FAA+F;AAC/F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK,MAAM,OAAO;AAClD,sDAAsD,MAAM;AAC5D,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,0DAA0D,MAAM;AAChE;AACA;AACA;AACA,aAAa;AACb;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E,4EAA4E;AAC5E,MAAM;AACN;AACA,4EAA4E;AAC5E,4EAA4E;AAC5E;AACA;AACA;AACA,cAAc;AACd;AACA,UAAU;AACV,yCAAyC;AACzC;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA,4EAA4E;AAC5E,4EAA4E;AAC5E;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,4EAA4E;AAC5E;AACA,sFAAsF;AACtF;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA,cAAc,8DAA8D;AAC5E;AACA;AACA,cAAc,8DAA8D;AAC5E;AACA,cAAc;AACd,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF,kFAAkF;AAClF;AACA,kFAAkF;AAClF,UAAU;AACV;AACA;AACA;AACA;AACA;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,sEAAsE;AACtE;AACA,sEAAsE;AACtE;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,2FAA2F;AAC3F;AACA,sEAAsE;AACtE;AACA,IAAI;AACJ;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,sEAAsE;AACtE;AACA,sEAAsE;AACtE,sEAAsE;AACtE;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA,6EAA6E;AAC7E,6EAA6E;AAC7E;AACA,6EAA6E;AAC7E,6EAA6E;AAC7E,uBAAuB,IAAI,kDAAkD;AAC7E,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW,wBAAwB;AAC7E,6EAA6E;AAC7E;AACA;AACA,6EAA6E;AAC7E,6EAA6E;AAC7E,6EAA6E;AAC7E,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,KAAK;AACL;AACA,6EAA6E;AAC7E;AACA,6EAA6E;AAC7E,6EAA6E;AAC7E;AACA,6EAA6E;AAC7E;AACA;AACA,mBAAmB,mBAAmB,uCAAuC;AAC7E;AACA;AACA,6EAA6E;AAC7E;AACA,6EAA6E;AAC7E;AACA;AACA;AACA,6EAA6E;AAC7E,6EAA6E;AAC7E;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,gFAAgF;AAChF,gFAAgF;AAChF,gFAAgF;AAChF,UAAU;AACV,gFAAgF;AAChF;AACA;AACA,oDAAoD,OAAO,qBAAqB;AAChF;AACA,gFAAgF;AAChF;AACA,SAAS;AACT;AACA;AACA;AACA,8CAA8C,WAAW,wBAAwB;AACjF,iFAAiF;AACjF;AACA,iFAAiF;AACjF,iFAAiF;AACjF;AACA,KAAK;AACL;AACA,iFAAiF;AACjF;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8CAA8C,WAAW,wBAAwB;AACjF,iFAAiF;AACjF;AACA,iFAAiF;AACjF,iFAAiF;AACjF,KAAK;AACL;AACA;AACA;AACA,iFAAiF;AACjF;AACA,iFAAiF;AACjF,iFAAiF;AACjF;AACA,wDAAwD,OAAO,kBAAkB;AACjF;AACA,kDAAkD,WAAW,oBAAoB;AACjF,iFAAiF;AACjF;AACA,iFAAiF;AACjF,iFAAiF;AACjF,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA,oEAAoE;AACpE,oEAAoE;AACpE,SAAS;AACT;AACA;AACA,oEAAoE;AACpE,SAAS;AACT;AACA;AACA,oEAAoE;AACpE,oEAAoE;AACpE,oEAAoE;AACpE,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,2EAA2E;AAC3E,oEAAoE;AACpE;AACA,oEAAoE;AACpE;AACA,oEAAoE;AACpE;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB;;;;;;;;;;AC3CxB;AACA;AACA;AACA,oEAAoE;AACpE;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,mEAAmE;AACnE,uBAAuB,IAAI,wCAAwC;AACnE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,oEAAoE;AACpE;AACA;AACA,oEAAoE;AACpE;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,oEAAoE;AACpE,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCnEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBY;AACZ;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n\r\n    //№97 №98 Calc\r\n    const result = document.querySelector('.calculating__result span');              //элемент куда записываем результат\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if(localStorage.getItem('sex')) {                                                //98 если получаем значения sex из памяти браузера \r\n        sex = localStorage.getItem('sex');                                           //98 записываем в переменную\r\n    } else {                                                                         //98 если данные не записаны в памяти LocalStorage\r\n        sex = 'female';                                                              //98 по умолчанию ставим эти\r\n        localStorage.setItem('sex', 'female');                                       //98 и записываем в память\r\n    }\r\n\r\n    if(localStorage.getItem('ratio')) {                                              //98 если получаем значения ratio из памяти браузера \r\n        ratio = localStorage.getItem('ratio');                                       //98 записываем в переменную\r\n    } else {                                                                         //98 если данные не записаны в памяти LocalStorage\r\n        ratio = '1.375';                                                             //98 по умолчанию ставим эти\r\n        localStorage.setItem('ratio', '1.375');                                      //98 и записываем в память\r\n    }\r\n\r\n    function initLocalStorage(selector, activeClass){                                //98 ф-я по добавлению класса активности элем из localStorage \r\n        const elements = document.querySelectorAll(selector);                        \r\n\r\n        elements.forEach(elem => {                                                   //98 перебираем массив полученныей по селектору\r\n            elem.classList.remove(activeClass);                                      //98 у каждго элемента удаляем клас активности\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')){            //98 если значение атрибута id == значению в LocalStorage\r\n                elem.classList.add(activeClass);                                     //98 данному элементу назначаем класс активности\r\n            }\r\n            if(elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalStorage('#gender div', 'calculating__choose-item_active');\r\n    initLocalStorage('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    function calcTotal() {                                                           //занимается подсчетами\r\n        if (!sex || !height || !weight || !age || !ratio) {                          //если хоть одно из полей не заполнено\r\n            result.textContent = '____';                                             //подсчеты не производятсяб записываем ____\r\n            return;                                                                  //и прирываем функцию\r\n        }\r\n\r\n        if(sex === 'famale'){                                                        //если пол женский \r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {                                                                     // если не женский пол)\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {                            //получение статических данных\r\n        const elements = document.querySelectorAll(selector);                         //получаем массив элементов селектора \r\n\r\n        elements.forEach(item => {                                \r\n            item.addEventListener('click', (e) => {\r\n                if(e.target.getAttribute('data-ratio')){                              //если элемент события имеет атрибут\r\n                    ratio = +e.target.getAttribute('data-ratio');                     //записываем значение этого атрибука в переменную ratio\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio')) //98 записываем в память браузера значения введенные пользователем\r\n                } else {\r\n                    sex = e.target.getAttribute('id');                                //если атрибут id ,записываем его значение \r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));         //98 записываем в память браузера значения введенные пользователем\r\n                } \r\n\r\n                elements.forEach( (elem) => {                                         //удаляем класс активности у всех элементов массива\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n                console.log(sex, ratio);\r\n                \r\n                e.target.classList.add(activeClass);                                  //элементу события класс активности добавляем\r\n\r\n                calcTotal();                                                          //вызываем подсчеты при каждом изменении\r\n\r\n            });\r\n        });\r\n    }\r\n   \r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {                                        //функция по динамическим инпутам\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if(input.value.match(/\\D/g)){                                             //98 если ввели не число\r\n                input.style.border = '1px solid red';                                 //98 добавляем красную окантовку\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {                                        //проверяем кажый инпут на полное совпадение атрибута \r\n                case 'height':                                                        //если атрибут heiht\r\n                    height = +input.value;                                            //то в переменную height запиываем введеное в инпут значение \r\n                    break;                                                            //останавливаем итерацию \r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age': \r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();                                                               //вызываем подсчеты при каждом изменении\r\n\r\n        });\r\n    }\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n\r\n    //Card\r\n    class MenuCard {\r\n        constructor (src, alt, title, descr, price, parentSelector, ...classes) {      // rest-оператор в случае если будут добавляться классы\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);    //получаем место куда вствляем карту\r\n            this.transfer = 27;                                      //предпологаемый курс валют\r\n            this.changeToUAH();                                      //при  создании новой копии класса будет вызываться конвертор валют\r\n        }\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;                 //метод по конвертации валюты в гривни\r\n        }\r\n        render() {\r\n            const element = document.createElement('div');           //добавляем div элемент и помещаем в него верстку карточки\r\n\r\n            if(this.classes.length === 0) {                          //если не передано ни одного класса, то присвоим по умолчанию \r\n                this.classes = 'menu__item';\r\n                element.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className)); //перебираем все добавленные классы и добавляем к element\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src= ${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\"> ${this.descr} </div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);                               //помещаем верстку(element) относительно динамического parent в HTML\r\n        }\r\n    }\r\n\r\n    const getResours = async (url) => {                                //создаем функцию по получению данных ссервера !!!УРОК № 90\r\n        const res = await fetch(url);\r\n\r\n        if(!res.ok){                                                         //если статус запроса не окей(не 200)\r\n           throw new Error(`Could not fetch ${url}, status: ${res.status}`); // выкидывает в консоль ошибку с адресом и статусом ошибки\r\n        }\r\n\r\n        return await res.json();                                       //транформируем данные из json формата в обычный обьект\r\n    };\r\n\r\n    /* axios.get('http://localhost:3000/menu')                         //сделать запрос с помощью библиотеки axix, ф-я getResours не нужна !урок 91\r\n        .then(data => {                                                \r\n            data.data.forEach( ({img, alting, title, descr, price}) => {    \r\n                new MenuCard(img, alting, title, descr, price, '.menu .container').render();   \r\n            });\r\n        }); */\r\n\r\n\r\n    getResours('http://localhost:3000/menu')                           //запрс к серверу\r\n        .then(data => {                                                //получаем промис с обычным массивом обьектов\r\n            data.forEach( ({img, alting, title, descr, price}) => {    //через деструктуризацию передаем свойства полученного с сервера обьекта\r\n                new MenuCard(img, alting, title, descr, price, '.menu .container').render();   //вызываем конструктор для карточек и вызываем метод по добавлению верстки\r\n            });\r\n        });\r\n\r\n//////////////////////////////////////////// урок 90 в конце постройка на лету////////////////////////////////\r\n\r\n        /* getResours('http://localhost:3000/menu')                     //постройка на лету если не нужна шаблонизация урок 90 в конце\r\n            .then(data => createCard(data));                            //получаем данные и вызываем функцию, передаем аргумент\r\n\r\n        function createCard(data) {\r\n            data.forEach(({img, alting, title, descr, price}) => {\r\n                const element =document.createElement('div');\r\n  \r\n                element.classList.add('menu__item');\r\n\r\n                element.innerHTML = `\r\n                    <img src= ${img} alt=${alting}>\r\n                    <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n                    <div class=\"menu__item-descr\"> ${descr} </div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n                    </div>\r\n                `;\r\n                document.querySelector('.menu .container').append(element);\r\n            });\r\n\r\n        } */\r\n    \r\n\r\n}\r\n\r\nmodule.exports = cards; ","function forms() {\r\n\r\n     //Form ///// Fetch API  /////////////////////////                      // -- через Fetch API\r\n     const forms = document.querySelectorAll('form');\r\n\r\n     const messages = {                                                     //создаем обьект с различными сообщениями для пользователя\r\n         loading: 'img/form/spinner.svg',\r\n         success: 'Спасибо! Скоро мы с Вами свяжемся',\r\n         failure: 'Что-то пошло не так...'\r\n     };\r\n \r\n     forms.forEach( item => {                                               //перебираем массив с формами\r\n         bindPostData(item);                                                //вызываем функцию postData на каждой форме \r\n     }); \r\n \r\n     const postData = async (url, data) => {                                //создаем функцию по общению  с сервером, постинг данных !!!УРОК № 90\r\n         const res = await fetch(url, {                                     //настраиваем постинг данных json, ответ записываем в переменную res\r\n             method: 'POST',                                            \r\n             headers: {\r\n                 'Content-type': 'application/json'                         //в заголовках между типом ставим : \r\n             },\r\n             body: data   \r\n         });\r\n         return await res.json();        //получаем ответ о статусе прохождении постинга в виде промиса => конвертируем в обычный обьект => возвращаем из фунции  \r\n     };\r\n \r\n     function bindPostData(form){                                           //фонкия отвечающая за привязку постинга данных на срвер\r\n         form.addEventListener('submit', (e) => {\r\n             e.preventDefault();\r\n               \r\n             const statusMessage = document.createElement('img');           //динамически добавляем элемент\r\n             statusMessage.src = messages.loading;                          //путь к картинке\r\n             statusMessage.style.cssText = `                              \r\n                 display: block;\r\n                 margin: 0 auto;\r\n             `;               \r\n             form.insertAdjacentElement('afterend', statusMessage);         //выгружаем в верстку после form\r\n \r\n             const formData = new FormData(form);                           //создаем обект который собирает данные из формы, обязательно в верстке должны быть атрибуты name\r\n             \r\n             const json = JSON.stringify( Object.fromEntries( formData.entries())  ); // превращаем массив обьектов в массив массивов => в обычный обьект => в json формат\r\n \r\n             postData('http://localhost:3000/requests', json)               //вызываем postData с передачей аргементов\r\n             .then(data => {                                                //получаем промис с ответом\r\n                 console.log(data);\r\n                 showThanksModal(messages.success);\r\n                 statusMessage.remove();\r\n \r\n             }).catch(() => {                                               //при ошибке\r\n                 showThanksModal(messages.failure);\r\n \r\n             }).finally(() => {                                             //действие при любом ответе или ошибке\r\n                 form.reset();   \r\n             });\r\n         });\r\n     } \r\n \r\n \r\n     //красивое оповещение поле отправки формы\r\n     function showThanksModal(message) {\r\n         const prevModalDiolog = document.querySelector('.modal__dialog');\r\n \r\n         prevModalDiolog.classList.add('hide');                                   //скрываем основную форму с инпутами \r\n         prevModalDiolog.classList.remove('show');\r\n         //showModal();\r\n \r\n         const thanksModal = document.createElement('div');                         \r\n         thanksModal.classList.add('modal__dialog');\r\n         thanksModal.innerHTML = `\r\n             <div class=\"modal__content\">\r\n                 <form action=\"#\">\r\n                     <div data-close class=\"modal__close\">&times;</div>\r\n                     <div class=\"modal__title\">${message}</div>\r\n                 </form>\r\n             </div>\r\n             `;\r\n         document.querySelector('.modal').append(thanksModal);\r\n \r\n         setTimeout( () => {                                                     \r\n             thanksModal.remove();                                                //удаляем форму благодарности\r\n             prevModalDiolog.classList.remove('hide');                            //восстанавливаем видимость основнойформы\r\n             prevModalDiolog.classList.add('show');\r\n             closeModal();                                                        //закрываем окно формы\r\n         }, 4000 );\r\n     }\r\n     \r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n\r\n     //Modal \r\n     const btnModal = document.querySelectorAll('[data-modal]'),\r\n     modal = document.querySelector('.modal');\r\n\r\n   btnModal.forEach( (btn) => {\r\n       btn.addEventListener('click', (e) => {\r\n           e.preventDefault();\r\n\r\n           showModal();\r\n       });\r\n   });\r\n\r\n   //let setModal = setTimeout(showModal, 5000 );                     //модальное окно открывается через заданное время\r\n\r\n   function showModal() {                                             //вынесли повторяющийся код в отдельную функцию\r\n       modal.classList.toggle(\"show\");\r\n       //modal.classList.add('show');\r\n       //modal.classList.remove('hide');\r\n       document.body.style.overflow = 'hidden';                       //отключаем прокрутку при открытом модальном окне\r\n   }\r\n\r\n   function closeModal() {                                            //вынесли повторяющийся код в отдельную функцию\r\n       modal.classList.toggle(\"show\");\r\n       //modal.classList.add('hide');\r\n       //modal.classList.remove('show');\r\n       document.body.style.overflow = '';                             // восстанавливаем функционал прокрутки при закрытии модального окна\r\n   }\r\n   \r\n   modal.addEventListener('click', (e) => {\r\n       if(e.target && e.target == modal || e.target.classList.contains('modal__close')){   //если клик по затемнению или крестику\r\n           closeModal();\r\n           //clearInterval(setModal);                                 //удаляем интервал если окно было закрыто\r\n       } \r\n   });\r\n\r\n   document.addEventListener('keydown', (e) => {                      //вешаем обработчик событий на кноаку Esc\r\n       if(e.code === 'Escape' && modal.classList.contains('show')) {\r\n           closeModal();\r\n           //clearInterval(setModal);\r\n       }\r\n   });\r\n\r\n   function showModalByScroll(){                                 \r\n       if(window.pageYOffset + document.documentElement.clientHeight  //если прокрученная часть окна + сама высота видимой части сайта \r\n           >= document.documentElement.scrollHeight ) {               // >= полной высоте страницы сайта\r\n\r\n           showModal();                                               //окрываем модальное окно\r\n           window.removeEventListener('scroll', showModalByScroll);   //удаляем оброботчик событий с прокруткиб чтобы сработало только 1 раз\r\n       }\r\n   }\r\n\r\n   window.addEventListener('scroll', showModalByScroll);              //назначаем обработчик событий на скрол\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n\r\n      // Slider --- простой слайдер урок №92 / слайдер с горизонтальной прокруткой №93\r\n      const slides = document.querySelectorAll('.offer__slide'),\r\n      slider = document.querySelector('.offer__slider'),                     //94 получаем весь слайдер \r\n      currentSlide = document.getElementById('current'),\r\n      totalSlide = document.getElementById('total'),\r\n      next = document.querySelector('.offer__slider-next'),\r\n      prev = document.querySelector('.offer__slider-prev'),\r\n      slideWrapper = document.querySelector('.offer__slider-wrapper'),\r\n      slideField = document.querySelector('.offer__slider-inner'),\r\n      width = window.getComputedStyle(slideWrapper).width;                   //93 получаем ширину переменной slideWrapper из применненных к ней стилей\r\n\r\n    let slideIndex = 1;                                                      //93 задаем индекс для текущегослайда\r\n    let offset = 0;                                                          //93 переменная для контроля отступаб так как слайдер горизонтальный\r\n\r\n    function getZiro(num) {                                                  //ф-я по добавлению нуля перед цифрой\r\n        if(num >= 0 && num < 10){                                            //если число из аргумента > 0 и < 10 \r\n            return `0${num}`;                                                //возвращаем 0 + это число\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    //инициализация слайдера       \r\n    currentSlide.textContent = getZiro(`${slideIndex}`);                     //93 в нумерацию слайдов прописываем индекс и ставим ноль перед цифрой\r\n    totalSlide.textContent = getZiro(slides.length);                         //93 показываем общее количесво слайдов в нумерации\r\n\r\n\r\n    slideField.style.width = 100 * slides.length + '%';                      //93 задаем ширину всего поля слайдера в ширину в %\r\n    slideField.style.display = 'flex';                                       //93 чтобы слайды выстроились по горизонтали\r\n    slideField.style.transition = '0.5s all';                                //93 плавность переключения\r\n    slideWrapper.style.overflow = 'hidden';                                  //93 скрываем все за пределами основной обертки слайдера\r\n    \r\n\r\n    slides.forEach(slide => {  \r\n                                                     \r\n        slide.style.width = width;                                           //93 задаем каждому сайду из массива ширину равную width\r\n    });\r\n\r\n    slider.style.position = 'relative';                                      //94 для позицианирования дотсов\r\n\r\n    const indicators = document.createElement('ol');                         //94 добавляем ордерлист для дотсов\r\n    let dots = [];                                                           //94 создаем массив для дотсов\r\n\r\n    indicators.classList.add('carousel-indicators');                         //94 применяем к нему класс из css\r\n    slider.append(indicators);\r\n\r\n    for(let i = 0; i < slides.length; i++){                                  //94 цикл по созданию дотсов \r\n        let dot = document.createElement('li');\r\n        dot.classList.add('dot');\r\n        dot.setAttribute('data-slide-to', i + 1);                            //94 каждому дотсу добавляем атрибук\r\n\r\n        if(i == 0) {                                                         //94 если первый слайдер, то и первый дотс с прозрачностью 1\r\n            dot.style.opacity = 1;\r\n        }\r\n\r\n        indicators.append(dot);                                              //94 апендим в indicators\r\n        dots.push(dot);                                                      //94 пушим дотсы в массив\r\n    }\r\n\r\n    function stringToNumber (str) {                                           //96 убирает все буквы и приводит к числовому значению\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        //if(offset == +width.slice(0, width.length-2) * (slides.length - 1)){  //93 если отступ(offset) == ширина слайда * кол-во сл -1 \r\n        if(offset == stringToNumber(width) * (slides.length - 1)){              //96 тоже что и на верхней, только НЕ числа заменяем на ''\r\n            offset = 0;                                                         //93 то возвращаем к первому слайду, отступ = 0\r\n        } else {\r\n            offset += stringToNumber(width);                                    //93 slice вырезает две буквы 'px' из приходяцей width\r\n        }\r\n        \r\n        slideField.style.transform = `translateX(-${offset}px)`;                //93 перемещаем влево на ширину offset\r\n\r\n        if(slideIndex == slides.length) {                                       //93 условие по отображению номера(индекса) слайда\r\n            slideIndex = 1;\r\n        }else {\r\n            slideIndex ++;\r\n        }\r\n\r\n        currentSlide.textContent = getZiro(`${slideIndex}`);                     //в нумерацию слайдов прописываем индекс и ставим ноль перед цифрой\r\n        totalSlide.textContent = getZiro(slides.length);                         //показываем общее количесво слайдов в нумерации\r\n\r\n        dots.forEach(dot => dot.style.opacity = '0.5');                          //94 всем дотсам прозрачность 50%\r\n        dots[slideIndex - 1].style.opacity = 1;                                  //94 дотс с нужным индексом прозрачность 1\r\n\r\n    });\r\n\r\n    prev.addEventListener('click', () => {                                       //93 все тоже только в обратную сторону\r\n        if(offset == 0) {         \r\n            offset = stringToNumber(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= stringToNumber(width);                       \r\n        }\r\n        \r\n        slideField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if(slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        }else {\r\n            slideIndex --;\r\n        }\r\n\r\n        currentSlide.textContent = getZiro(`${slideIndex}`);                     //в нумерацию слайдов прописываем индекс и ставим ноль перед цифрой\r\n        totalSlide.textContent = getZiro(slides.length);                         //показываем общее количесво слайдов в нумерации\r\n\r\n        dots.forEach(dot => dot.style.opacity = '0.5');                          //94 всем дотсам прозрачность 50%\r\n        dots[slideIndex - 1].style.opacity = 1;                                  //94 дотс с нужным индексом прозрачность 1\r\n    });\r\n    \r\n    dots.forEach( dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');              //94 записываем в переменную номер дотса на котор. событие \r\n\r\n            slideIndex = slideTo;                                                //94 меняем индек относительно номера дотса(slideTo)\r\n            offset = stringToNumber(width) * (slideTo - 1);                      //94 отступ относительно slideTo\r\n\r\n            slideField.style.transform = `translateX(-${offset}px)`;             //94 перемещаем слайд на новый отсуп\r\n\r\n            currentSlide.textContent = getZiro(`${slideIndex}`);                 //в нумерацию слайдов прописываем индекс и ставим ноль перед цифрой\r\n            totalSlide.textContent = getZiro(slides.length);                     //показываем общее количесво слайдов в нумерации\r\n\r\n            dots.forEach(dot => dot.style.opacity = '0.5');                      //94 всем дотсам прозрачность 50%\r\n            dots[slideIndex - 1].style.opacity = 1;                              //94 дотс с нужным индексом прозрачность 1\r\n        });\r\n    });\r\n}\r\n\r\n\r\nmodule.exports = slider;","function tabs() {\r\n\r\n     //Tabs\r\n    let tabsContent = document.querySelectorAll('.tabcontent'),\r\n    tabHeader = document.querySelectorAll('.tabheader__item'),\r\n    tabsParant = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() {                                    //перебираем цыклом для того чтобы скрыть все табы\r\n        tabsContent.forEach( (item) => {\r\n            item.classList.remove('fade');                          //удаляем анимацию fade \r\n            item.classList.add('hide');                             //присваиваем им класс hide\r\n        });\r\n\r\n        tabHeader.forEach( (item) => {\r\n            item.classList.remove('tabheader__item_active');        //удаляем класс активности\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {                                //если не передано никакого аргемента тогда i=0\r\n        tabsContent[i].classList.add('fade');                       //добавляем анимацию fade\r\n        tabsContent[i].classList.remove('hide');                    //удаляем arr[0] класс hide\r\n        tabHeader[i].classList.add('tabheader__item_active');       //присваиваем arr[0] класс акивности\r\n        \r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParant.addEventListener('click', (e) => {                   //вешаем обработчик событий на родителя списка\r\n        \r\n        if(e.target && e.target.classList.contains('tabheader__item')) {   //проверяем на то что кликнули именно в элемент списка\r\n            tabHeader.forEach( (item, i) => {                       //перебираем все элементы списка\r\n\r\n                if(e.target == item) {                              //если элемент по которому кликнути и элемент списка совпадают \r\n                    hideTabContent();                            \r\n                    showTabContent(i);                              //передаем номер эл в списке как аргумент \r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\n\r\nmodule.exports = tabs;  //экспортируем модуль","function timer() {\r\n\r\n    //Timer\r\n    const deadline = new Date()  /* '2022-05-30' */;                //время до которого должны дойти\r\n\r\n    deadline.setDate(deadline.getDate() + 1);                       // остается всегда 1 день\r\n\r\n    function getTimeRemaining(endtime) {\r\n        let days, hours, minutes, seconds;\r\n\r\n        const t = Date.parse(endtime) - Date.parse(new Date());     //кол-во времени до которого должно дойти - настоящее время \r\n            \r\n            if(t <= 0) {                                            //если время чтетчика <= 0, то все значения 0\r\n                days = 0;\r\n                hours = 0;\r\n                minutes = 0;\r\n                seconds = 0;\r\n            } else {\r\n                days = Math.floor(t / (1000 * 60 * 60 * 24)),       //кол-во дней\r\n                hours = Math.floor((t / (1000 * 60 * 60)) % 24 ),   //кол-во часов \r\n                minutes = Math.floor((t / 1000 / 60) % 60 ),        //кол-во минут\r\n                seconds = Math.floor((t / 1000) % 60);              //кол-во секунд\r\n            }\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds,\r\n        };\r\n    }\r\n\r\n    function getZiro(num) {                                        //ф-я по добавлению нуля перед цифрой\r\n        if(num >= 0 && num < 10){                                  //если число из аргумента > 0 и < 10 \r\n            return `0${num}`;                                      //возвращаем 0 + это число\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),             //получаем все значения \r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);        //вызываем updateClock каждую секунду\r\n        updateClock();                                              //вызываем один раз без счетчикаб чтобы значения отображались сразу а не через сек\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);                    //записываем результат функции в перемкнную t\r\n\r\n            days.innerHTML = getZiro(t.days);                       //записываем в верстку значения полученные из getTimeRemaining(endtime) и записанные в переменную t\r\n            hours.innerHTML = getZiro(t.hours);\r\n            minutes.innerHTML = getZiro(t.minutes);\r\n            seconds.innerHTML = getZiro(t.seconds);\r\n\r\n            if(t.total <= 0){                                       //если счетчик прошел свое время, \r\n                clearInterval(timeInterval);                        //сбрасываем вызов функции updateClock\r\n            }\r\n        }\r\n    }\r\n    setClock('.timer', deadline); \r\n\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\"\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const calc = require('./modules/calc'),\r\n          cards = require('./modules/cards'),\r\n          forms = require('./modules/forms'),\r\n          modal = require('./modules/modal'),\r\n          slider = require('./modules/slider'),\r\n          tabs = require('./modules/tabs'),\r\n          timer = require('./modules/timer');\r\n\r\n    calc();\r\n    cards();\r\n    forms();\r\n    modal();\r\n    slider();\r\n    tabs();\r\n    timer();  \r\n\r\n}); \r\n"],"names":[],"sourceRoot":""}